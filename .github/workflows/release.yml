name: Release

on:
  push:
#  workflow_dispatch:
#    inputs:
#      release-tag:
#        description: 'Release Tag'
#        required: false
#        default: 'release/XXX'
#      process-ide-cli:
#        description: 'Release process-ide-cli app (y/n)?'
#        required: true
#        default: 'y'
#      digiwf-lib:
#        description: 'Release digiwf-lib (y/n)?'
#        required: true
#        default: 'y'
#      spring-boot-apps:
#        description: 'Release spring boot services (y/n)?'
#        required: true
#        default: 'n'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Build
        run: npm run build
      # process-ide-cli
      - uses: actions/upload-artifact@v2
        with:
          name: process-ide-cli
          path: dist/apps/process-ide-cli
      # digiwf-lib
      - uses: actions/upload-artifact@v2
        with:
          name: digiwf-lib
          path: dist/libs/digiwf-lib
      - uses: actions/upload-artifact@v3
        with:
          name: spring-boot-apps
          path: spring-boot-apps

  create-release-tag:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/test',
              sha: context.sha
            })

  # process-ide-cli
  publish-process-ide-cli:
#    if: github.event.inputs.process-ide-cli == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: process-ide-cli
      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}
      # docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_MIRAGON_USERNAME }}
          password: ${{ secrets.DOCKER_MIRAGON_PASSWORD  }}
      - name: get-npm-version
        id: process-ide-cli-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Build and push miragon-process-ide-cli
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: miragon/process-ide-cli:${{ steps.process-ide-cli-version.outputs.current-version}}

  # digiwf-lib
  publish-digiwf-lib:
#    if: github.event.inputs.digiwf-lib == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: digiwf-lib
      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

  publish-spring-boot-apps:
#    if: github.event.inputs.spring-boot-apps == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: spring-boot-apps
      # tbd
      # docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_MIRAGON_USERNAME }}
          password: ${{ secrets.DOCKER_MIRAGON_PASSWORD  }}
      - name: Build and push digiwf-deployment-proxy
        uses: docker/build-push-action@v2
        with:
          context: ./digiwf-deployment-proxy
          push: true
          tags: miragon/digiwf-deployment-proxy:${{ env.RELEASE_VERSION }}
